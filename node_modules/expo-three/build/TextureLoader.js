import AssetUtils from 'expo-asset-utils';
import { Platform } from 'react-native';
import THREE from './Three';
export default class ExpoTextureLoader extends THREE.TextureLoader {
    load(asset, onLoad, onProgress, onError) {
        if (!asset) {
            throw new Error('ExpoTHREE.TextureLoader.load(): Cannot parse a null asset');
        }
        let texture = new THREE.Texture();
        const loader = new THREE.ImageLoader(this.manager);
        loader.setCrossOrigin(this.crossOrigin);
        loader.setPath(this.path);
        (async () => {
            const nativeAsset = await AssetUtils.resolveAsync(asset);
            function parseAsset(image) {
                texture.image = image;
                texture.needsUpdate = true;
                if (onLoad !== undefined) {
                    onLoad(texture);
                }
            }
            if (Platform.OS === 'web') {
                loader.load(nativeAsset.localUri, image => {
                    parseAsset(image);
                }, onProgress, onError);
            }
            else {
                texture['isDataTexture'] = true; // Forces passing to `gl.texImage2D(...)` verbatim
                parseAsset({
                    data: nativeAsset,
                    width: nativeAsset.width,
                    height: nativeAsset.height,
                });
            }
        })();
        return texture;
    }
}
//# sourceMappingURL=TextureLoader.js.map