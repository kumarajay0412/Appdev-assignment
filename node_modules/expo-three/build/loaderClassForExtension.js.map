{"version":3,"file":"loaderClassForExtension.js","sourceRoot":"","sources":["../src/loaderClassForExtension.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,sCAAsC,CAAC;AACjE,OAAO,EAAE,YAAY,EAAE,MAAM,yCAAyC,CAAC;AACvE,OAAO,EAAE,SAAS,EAAE,MAAM,sCAAsC,CAAC;AACjE,OAAO,EAAE,aAAa,EAAE,MAAM,0CAA0C,CAAC;AACzE,OAAO,EAAE,SAAS,EAAE,MAAM,sCAAsC,CAAC;AACjE,OAAO,EAAE,UAAU,EAAE,MAAM,uCAAuC,CAAC;AACnE,OAAO,EAAE,SAAS,EAAE,MAAM,sCAAsC,CAAC;AACjE,OAAO,EAAE,SAAS,EAAE,MAAM,sCAAsC,CAAC;AACjE,OAAO,EAAE,SAAS,EAAE,MAAM,sCAAsC,CAAC;AACjE,OAAO,EAAE,SAAS,EAAE,MAAM,sCAAsC,CAAC;AACjE,OAAO,EAAE,SAAS,EAAE,MAAM,sCAAsC,CAAC;AACjE,OAAO,EAAE,SAAS,EAAE,MAAM,sCAAsC,CAAC;AACjE,OAAO,EAAE,SAAS,EAAE,MAAM,sCAAsC,CAAC;AACjE,OAAO,EAAE,OAAO,EAAE,MAAM,oCAAoC,CAAC;AAE7D,SAAS,YAAY,CAAC,GAAW;IAC/B,MAAM,gBAAgB,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAY,CAAC;IACxD,OAAO,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,GAAW;IAC3C,MAAM,SAAS,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;IACpC,OAAO,uBAAuB,CAAC,SAAS,CAAC,CAAC;AAC5C,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,SAAiB;IACvD,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;QACjC,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;KAC7D;IACD,QAAQ,SAAS,CAAC,WAAW,EAAE,EAAE;QAC/B,KAAK,KAAK;YACR,OAAO,SAAS,CAAC;QACnB,KAAK,KAAK;YACR,OAAO,SAAS,CAAC;QACnB,KAAK,QAAQ;YACX,OAAO,YAAY,CAAC;QACtB,KAAK,KAAK;YACR,OAAO,SAAS,CAAC;QACnB,KAAK,KAAK;YACR,MAAM,IAAI,KAAK,CACb,gEAAgE,CACjE,CAAC;QACJ,KAAK,KAAK;YACR,OAAO,SAAS,CAAC;QACnB,KAAK,KAAK,CAAC;QACX,KAAK,MAAM;YACT,OAAO,UAAU,CAAC;QACpB,KAAK,KAAK,CAAC;QACX,KAAK,KAAK;YACR,OAAO,SAAS,CAAC;QACnB,KAAK,KAAK;YACR,OAAO,SAAS,CAAC;QACnB,KAAK,KAAK;YACR,OAAO,SAAS,CAAC;QACnB,KAAK,KAAK;YACR,OAAO,SAAS,CAAC;QACnB,KAAK,KAAK;YACR,OAAO,SAAS,CAAC;QACnB,KAAK,KAAK;YACR,OAAO,aAAa,CAAC;QACvB,KAAK,KAAK;YACR,OAAO,SAAS,CAAC;QACnB,KAAK,KAAK,CAAC;QACX,KAAK,KAAK;YACR,MAAM,IAAI,KAAK,CACb,gEAAgE,CACjE,CAAC;QACJ,KAAK,GAAG;YACN,OAAO,OAAO,CAAC;QAEjB,cAAc;QACd,oFAAoF;QACpF,8BAA8B;QAC9B;YACE,MAAM,IAAI,KAAK,CACb,8DAA8D;gBAC5D,SAAS,CACZ,CAAC;KACL;AACH,CAAC","sourcesContent":["import { AMFLoader } from 'three/examples/jsm/loaders/AMFLoader';\nimport { AssimpLoader } from 'three/examples/jsm/loaders/AssimpLoader';\nimport { BVHLoader } from 'three/examples/jsm/loaders/BVHLoader';\nimport { ColladaLoader } from 'three/examples/jsm/loaders/ColladaLoader';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { PCDLoader } from 'three/examples/jsm/loaders/PCDLoader';\nimport { PLYLoader } from 'three/examples/jsm/loaders/PLYLoader';\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader';\nimport { TDSLoader } from 'three/examples/jsm/loaders/TDSLoader';\nimport { TTFLoader } from 'three/examples/jsm/loaders/TTFLoader';\nimport { XLoader } from 'three/examples/jsm/loaders/XLoader';\n\nfunction getExtension(uri: string): string {\n  const lastUriComponent = uri.split('.').pop() as string;\n  return lastUriComponent.split('?')[0].split('#')[0];\n}\n\nexport function loaderClassForUri(uri: string): string {\n  const extension = getExtension(uri);\n  return loaderClassForExtension(extension);\n}\n\nexport function loaderClassForExtension(extension: string): any {\n  if (typeof extension !== 'string') {\n    throw new Error('Supplied extension is not a valid string');\n  }\n  switch (extension.toLowerCase()) {\n    case '3mf':\n      return TTFLoader;\n    case 'amf':\n      return AMFLoader;\n    case 'assimp':\n      return AssimpLoader;\n    case 'bvh':\n      return BVHLoader;\n    case 'ctm':\n      throw new Error(\n        'CTMLoader is deprecated. Please load it manually with three.js'\n      );\n    case 'fbx':\n      return FBXLoader;\n    case 'glb':\n    case 'gltf':\n      return GLTFLoader;\n    case 'max':\n    case '3ds':\n      return TDSLoader;\n    case 'pcd':\n      return PCDLoader;\n    case 'ply':\n      return PLYLoader;\n    case 'obj':\n      return OBJLoader;\n    case 'mtl':\n      return MTLLoader;\n    case 'dae':\n      return ColladaLoader;\n    case 'stl':\n      return STLLoader;\n    case 'vtk':\n    case 'vtp':\n      throw new Error(\n        'VRMLoader is deprecated. Please load it manually with three.js'\n      );\n    case 'x':\n      return XLoader;\n\n    // case 'drc':\n    //   if (!THREE.DRACOLoader) require('three/examples/js/loaders/draco/DRACOLoader');\n    //   return THREE.DRACOLoader;\n    default:\n      throw new Error(\n        'ExpoTHREE.loaderClassForExtension(): Unrecognized file type ' +\n          extension\n      );\n  }\n}\n"]}