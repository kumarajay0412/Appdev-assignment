{"version":3,"file":"useDimensions.js","sourceRoot":"","sources":["../../src/hooks/useDimensions.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,UAAU,EAAc,MAAM,cAAc,CAAC;AAItD,MAAM,CAAC,OAAO,UAAU,aAAa;IACnC,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAiB;QACjE,MAAM,EAAE,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC;QAChC,MAAM,EAAE,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC;KACjC,CAAC,CAAC;IAEH,MAAM,QAAQ,GAAG,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,EAAE;QACtC,aAAa,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IACpC,CAAC,CAAC;IAEF,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,UAAU,CAAC,gBAAgB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAEhD,OAAO,GAAG,EAAE,CAAC,UAAU,CAAC,mBAAmB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAClE,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,UAAU,CAAC;AACpB,CAAC;AAAA,CAAC","sourcesContent":["import * as React from 'react';\nimport { Dimensions, ScaledSize } from 'react-native';\n\ntype DimensionsType = { window: ScaledSize, screen: ScaledSize };\n\nexport default function useDimensions(): DimensionsType {\n  const [dimensions, setDimensions] = React.useState<DimensionsType>({\n    window: Dimensions.get('window'),\n    screen: Dimensions.get('screen'),\n  });\n\n  const onChange = ({ window, screen }) => {\n    setDimensions({ window, screen });\n  };\n\n  React.useEffect(() => {\n    Dimensions.addEventListener('change', onChange);\n\n    return () => Dimensions.removeEventListener('change', onChange);\n  }, []);\n\n  return dimensions;\n};\n"]}